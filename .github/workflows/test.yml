name: Build and test
on:
  push: 
    branches: main
  pull_request: 
    branches: main

env:
  CKANVERSION: 2.9.7
  CKAN_DATASTORE_POSTGRES_DB: datastore_test
  CKAN_DATASTORE_POSTGRES_READ_USER: datastore_read
  CKAN_DATASTORE_POSTGRES_READ_PWD: pass
  CKAN_DATASTORE_POSTGRES_WRITE_USER: datastore_write
  CKAN_DATASTORE_POSTGRES_WRITE_PWD: pass
  CKAN_POSTGRES_DB: ckan_test
  CKAN_POSTGRES_USER: ckan_default
  CKAN_POSTGRES_PWD: pass
  PGPASSWORD: ckan
  
jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      redis-server:
        image: redis
      postgres_c: 
        image: postgres:10
        env: 
          POSTGRES_USER: ckan
          POSTGRES_PASSWORD: ckan
          POSTGRES_DB: ckan
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      xvfb:
        image: metal3d/xvfb
    steps:
    
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update -y
          apt-get install -y solr-jetty pip postgresql-client openjdk-8-jdk
          wget https://github.com/mozilla/geckodriver/releases/download/v0.21.0/geckodriver-v0.21.0-linux64.tar.gz
          mkdir geckodriver
          tar -xzf geckodriver-v0.21.0-linux64.tar.gz -C geckodriver
          export PATH=$PATH:$PWD/geckodriver
      - name: Install Ckan
        run: |
          git clone https://github.com/ckan/ckan
          cd ckan
          git checkout ckan-${CKANVERSION}
          sed -i "s|psycopg2==2.4.5|psycopg2==2.7.1|g" requirements.txt
          pip install -U pip && \
          pip install --upgrade --no-cache-dir -r requirement-setuptools.txt && \
          pip install --upgrade --no-cache-dir -r requirements.txt && \
          pip install --upgrade --no-cache-dir -r dev-requirements.txt && \
          pip install -e .
      - name: Config Solr
        run: |
         # cd -
          echo "Checking solr"
          ls -la /etc/ | grep solr
          sed -i -e 's/solr_url.*/solr_url = http:\/\/127.0.0.1:8080\/solr/' ckan/test-core.ini
          printf "NO_START=0\nJETTY_HOST=127.0.0.1\nJETTY_PORT=8080\nJAVA_HOME=$JAVA_HOME" | sudo tee /etc/default/jetty
          sudo cp ckan/ckan/config/solr/schema.xml /etc/solr/conf/schema.xml
          service jetty9 restart || true  # erroring out but does seem to work
          
      - name: Init database
        run: |
          psql --host=postgres_c --username=ckan --command="CREATE USER ${CKAN_POSTGRES_USER} WITH PASSWORD '${CKAN_POSTGRES_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
          createdb --encoding=utf-8 --host=postgres_c --username=ckan --owner=${CKAN_POSTGRES_USER} ${CKAN_POSTGRES_DB}
          psql --host=postgres_c --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_READ_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_READ_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
          psql --host=postgres_c --username=ckan --command="CREATE USER ${CKAN_DATASTORE_POSTGRES_WRITE_USER} WITH PASSWORD '${CKAN_DATASTORE_POSTGRES_WRITE_PWD}' NOSUPERUSER NOCREATEDB NOCREATEROLE;"
          createdb --encoding=utf-8 --host=postgres_c --username=ckan --owner=${CKAN_DATASTORE_POSTGRES_WRITE_USER} ${CKAN_DATASTORE_POSTGRES_DB}
          
          cd ckan
          ckan -c test-core.ini datastore set-permissions | psql --host=postgres_c --username=ckan
          # psql --host=postgresql --username=ckan --dbname=${CKAN_DATASTORE_POSTGRES_DB} --command="CREATE extension tablefunc;"
          ckan -c test-core.ini db init
      - name: Install private datasets
        run: |
          cd - 
          python setup.py develop
          
          export DISPLAY=:99.0
          sleep 3 # give xvfb some time to start
          
          echo "Starting Jetty"
          sudo service jetty9 restart

          sudo netstat -ntlp

          python setup.py nosetests
          
          
